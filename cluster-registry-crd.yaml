apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: clusters.clusterregistry.k8s.io
spec:
  group: clusterregistry.k8s.io
  names:
    kind: Cluster
    plural: clusters
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec is the specification of the cluster. This may or may not
            be reconciled by an active controller.
          properties:
            authInfo:
              description: AuthInfo contains public information that can be used to
                authenticate to and authorize with this cluster. It is not meant to
                store private information (e.g., tokens or client certificates) and
                cluster registry implementations are not expected to provide hardened
                storage for secrets.
              properties:
                controller:
                  description: Controller references an object that contains implementation-specific
                    details about how a controller should authenticate. A simple use
                    case for this would be to reference a secret in another namespace
                    that stores a bearer token that can be used to authenticate against
                    this cluster's API server.
                  properties:
                    kind:
                      description: 'Kind contains the kind of the referent, e.g.,
                        Secret or ConfigMap More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name contains the name of the referent. More info:
                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace contains the namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
                user:
                  description: User references an object that contains implementation-specific
                    details about how a user should authenticate against this cluster.
                  properties:
                    kind:
                      description: 'Kind contains the kind of the referent, e.g.,
                        Secret or ConfigMap More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name contains the name of the referent. More info:
                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace contains the namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
              type: object
            kubernetesApiEndpoints:
              description: KubernetesAPIEndpoints represents the endpoints of the
                API server for this cluster.
              properties:
                caBundle:
                  description: CABundle contains the certificate authority information.
                  format: byte
                  type: string
                serverEndpoints:
                  description: ServerEndpoints specifies the address(es) of the Kubernetes
                    API serverâ€™s network identity or identities.
                  items:
                    properties:
                      clientCIDR:
                        description: The CIDR with which clients can match their IP
                          to figure out if they should use the corresponding server
                          address.
                        type: string
                      serverAddress:
                        description: Address of this server, suitable for a client
                          that matches the above CIDR. This can be a hostname, hostname:port,
                          IP or IP:port.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        status:
          description: Status is the status of the cluster.
          properties:
            conditions:
              description: Conditions contains the different condition statuses for
                this cluster.
              items:
                properties:
                  lastHeartbeatTime:
                    description: LastHeartbeatTime is the last time this condition
                      was updated.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      changed from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human-readable message indicating details
                      about the last status change.
                    type: string
                  reason:
                    description: Reason is a (brief) reason for the condition's last
                      status change.
                    type: string
                  status:
                    description: Status is the status of the condition. One of True,
                      False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the cluster condition.
                    type: string
                required:
                - type
                - status
                type: object
              type: array
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
